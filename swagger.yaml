openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-api-bwjg.onrender.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      operationId: RegisterUser
      parameters:
      - name: Cache-Control
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: no-cache
      - name: Postman-Token
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Content-Length
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: integer
          format: int32
          example: 0
      - name: Host
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: PostmanRuntime/7.32.1
      - name: Accept
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: '*/*'
      - name: Accept-Encoding
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: gzip, deflate, br
      - name: Connection
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: keep-alive
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterUserRequest'
              - example:
                  name: John
            example:
              name: John
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login User
      operationId: LoginUser
      parameters:
      - name: Cache-Control
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: no-cache
      - name: Postman-Token
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Content-Length
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Host
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: PostmanRuntime/7.32.1
      - name: Accept
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: '*/*'
      - name: Accept-Encoding
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: gzip, deflate, br
      - name: Connection
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: keep-alive
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginUserRequest'
              - example:
                  email: anna@gmail.com
                  password: secret
            example:
              email: anna@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters:
      - name: Cache-Control
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: no-cache
      - name: Postman-Token
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Content-Length
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Host
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: PostmanRuntime/7.32.1
      - name: Accept
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: '*/*'
      - name: Accept-Encoding
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: gzip, deflate, br
      - name: Connection
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: keep-alive
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - example:
                  company: binance
                  position: web3 back-end developer
            example:
              company: binance
              position: web3 back-end developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters:
      - name: Cache-Control
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: no-cache
      - name: Postman-Token
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Host
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: PostmanRuntime/7.32.1
      - name: Accept
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: '*/*'
      - name: Accept-Encoding
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: gzip, deflate, br
      - name: Connection
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: keep-alive
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters:
      - name: Cache-Control
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: no-cache
      - name: Postman-Token
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Host
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: PostmanRuntime/7.32.1
      - name: Accept
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: '*/*'
      - name: Accept-Encoding
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: gzip, deflate, br
      - name: Connection
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: keep-alive
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters:
      - name: Cache-Control
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: no-cache
      - name: Postman-Token
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Content-Length
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Host
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: PostmanRuntime/7.32.1
      - name: Accept
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: '*/*'
      - name: Accept-Encoding
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: gzip, deflate, br
      - name: Connection
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: keep-alive
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobRequest'
              - example:
                  company: twitch
                  position: full-stack engineer
            example:
              company: twitch
              position: full-stack engineer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []

    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters:
      - name: Cache-Control
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: no-cache
      - name: Postman-Token
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: Host
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: <calculated when request is sent>
      - name: User-Agent
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: PostmanRuntime/7.32.1
      - name: Accept
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: '*/*'
      - name: Accept-Encoding
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: gzip, deflate, br
      - name: Connection
        in: header
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: keep-alive
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - name
      type: object
      properties:
        name:
          type: string
      example:
        name: John
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: anna@gmail.com
        password: secret
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: binance
        position: web3 back-end developer
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: twitch
        position: full-stack engineer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''